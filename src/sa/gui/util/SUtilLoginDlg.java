/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SUtilLoginDlg.java
 *
 * Created on 25/08/2011, 12:05:19 PM
 */

package sa.gui.util;

import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.border.TitledBorder;
import sa.lib.SLibConsts;
import sa.lib.SLibUtils;
import sa.lib.db.SDbConsts;
import sa.lib.db.SDbDatabase;
import sa.lib.gui.SGuiClient;
import sa.lib.gui.SGuiConsts;
import sa.lib.gui.SGuiItem;
import sa.lib.gui.SGuiUtils;

/**
 *
 * @author Sergio Flores
 */
public class SUtilLoginDlg extends javax.swing.JDialog {

    private SGuiClient miClient;
    private SDbDatabase moDatabase;
    private int mnFormResult;
    private int[] manUserKey;
    private boolean mbFirstActivation;
    private String msColumnCompanyId;
    private String msColumnCompany;
    private boolean mbApplyUserDisabled;

    /** Creates new form SUtilLoginDlg */
    public SUtilLoginDlg(SGuiClient client) {
        this(client, "id_co", "co");
    }

    /** Creates new form SUtilLoginDlg */
    public SUtilLoginDlg(SGuiClient client, String companyId, String company) {
        this(client, companyId, company, true);
    }

    /** Creates new form SUtilLoginDlg */
    public SUtilLoginDlg(SGuiClient client, String companyId, String company, boolean applyUserDisabled) {
        super(client.getFrame(), true);
        miClient = client;
        msColumnCompanyId = companyId;
        msColumnCompany = company;
        mbApplyUserDisabled = applyUserDisabled;
        initComponents();
        initComponentsCustom();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpDialogNorth = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jlUser = new javax.swing.JLabel();
        jtfUser = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jlPassword = new javax.swing.JLabel();
        jpfPassword = new javax.swing.JPasswordField();
        jpDialogCenter = new javax.swing.JPanel();
        jspCompanies = new javax.swing.JScrollPane();
        jlstCompanies = new javax.swing.JList<SGuiItem>();
        jpCommands = new javax.swing.JPanel();
        jbOk = new javax.swing.JButton();
        jbCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Acceso");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jpDialogNorth.setBorder(javax.swing.BorderFactory.createTitledBorder("Cuenta de acceso:"));
        jpDialogNorth.setLayout(new java.awt.GridLayout(2, 1, 0, 5));

        jPanel4.setLayout(new java.awt.FlowLayout(0, 5, 0));

        jlUser.setText("Usuario:");
        jlUser.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel4.add(jlUser);

        jtfUser.setPreferredSize(new java.awt.Dimension(100, 23));
        jtfUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfUserActionPerformed(evt);
            }
        });
        jPanel4.add(jtfUser);

        jpDialogNorth.add(jPanel4);

        jPanel5.setLayout(new java.awt.FlowLayout(0, 5, 0));

        jlPassword.setText("Contrase√±a:");
        jlPassword.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel5.add(jlPassword);

        jpfPassword.setPreferredSize(new java.awt.Dimension(100, 23));
        jpfPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jpfPasswordActionPerformed(evt);
            }
        });
        jPanel5.add(jpfPassword);

        jpDialogNorth.add(jPanel5);

        getContentPane().add(jpDialogNorth, java.awt.BorderLayout.NORTH);

        jpDialogCenter.setBorder(javax.swing.BorderFactory.createTitledBorder("Empresa:"));
        jpDialogCenter.setLayout(new java.awt.BorderLayout());

        jlstCompanies.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jlstCompanies.setToolTipText(sa.lib.gui.SGuiConsts.MSG_OPTION_DBL_CLICK);
        jlstCompanies.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlstCompaniesMouseClicked(evt);
            }
        });
        jspCompanies.setViewportView(jlstCompanies);

        jpDialogCenter.add(jspCompanies, java.awt.BorderLayout.CENTER);

        getContentPane().add(jpDialogCenter, java.awt.BorderLayout.CENTER);

        jpCommands.setLayout(new java.awt.FlowLayout(2));

        jbOk.setText("Aceptar");
        jbOk.setMargin(new java.awt.Insets(2, 0, 2, 0));
        jbOk.setPreferredSize(new java.awt.Dimension(75, 23));
        jbOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbOkActionPerformed(evt);
            }
        });
        jpCommands.add(jbOk);

        jbCancel.setText("Cancelar");
        jbCancel.setMargin(new java.awt.Insets(2, 0, 2, 0));
        jbCancel.setPreferredSize(new java.awt.Dimension(75, 23));
        jbCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelActionPerformed(evt);
            }
        });
        jpCommands.add(jbCancel);

        getContentPane().add(jpCommands, java.awt.BorderLayout.SOUTH);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-400)/2, (screenSize.height-250)/2, 400, 250);
    }// </editor-fold>//GEN-END:initComponents

    private void jbOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbOkActionPerformed
        actionOk();
    }//GEN-LAST:event_jbOkActionPerformed

    private void jbCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelActionPerformed
        actionCancel();
    }//GEN-LAST:event_jbCancelActionPerformed

    private void jlstCompaniesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlstCompaniesMouseClicked
        if (evt.getClickCount() == 2) {
            actionOk();
        }
    }//GEN-LAST:event_jlstCompaniesMouseClicked

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        windowActivated();
    }//GEN-LAST:event_formWindowActivated

    private void jtfUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfUserActionPerformed
        jpfPassword.requestFocus();
    }//GEN-LAST:event_jtfUserActionPerformed

    private void jpfPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jpfPasswordActionPerformed
        if (jlstCompanies.isEnabled() && jlstCompanies.getModel().getSize() > 1) {
            jlstCompanies.requestFocus();
        }
        else {
            jbOk.requestFocus();
        }
    }//GEN-LAST:event_jpfPasswordActionPerformed

    private void initComponentsCustom() {
        String sql = "";
        ResultSet resultSet = null;
        Vector<SGuiItem> items = new Vector<SGuiItem>();

        moDatabase = null;
        mnFormResult = SLibConsts.UNDEFINED;
        manUserKey = null;
        mbFirstActivation = true;

        resetForm();

        try {
            sql = "SELECT " + msColumnCompanyId + ", " + msColumnCompany + ", db " +
                    "FROM " + miClient.getTableCompany() + " " +
                    "WHERE b_del = 0 ORDER BY " + msColumnCompany + ", " + msColumnCompanyId + " ";
            resultSet = miClient.getSysStatement().executeQuery(sql);
            while (resultSet.next()) {
                SGuiItem item = new SGuiItem(new int[] { resultSet.getInt(msColumnCompanyId) }, resultSet.getString(msColumnCompany));
                item.setComplement(resultSet.getString("db"));
                items.add(item);
            }

            jlstCompanies.setListData(items);
            if (jlstCompanies.getModel().getSize() > 0) {
                jlstCompanies.setSelectedIndex(0);
            }
        }
        catch (Exception e) {
            SLibUtils.showException(this, e);
        }

        SGuiUtils.createActionMap(rootPane, this, "actionCancel", "cancel", KeyEvent.VK_ESCAPE);
    }

    private void windowActivated() {
        if (mbFirstActivation) {
            mbFirstActivation = false;
            jtfUser.requestFocus();
        }
    }

    public void actionOk() {
        String password = new String(jpfPassword.getPassword());
        Statement statement = null;

        if (jtfUser.getText().length() == 0) {
            miClient.showMsgBoxWarning(SGuiConsts.ERR_MSG_FIELD_REQ + "'" + SGuiUtils.getLabelName(jlUser.getText()) + "'.");
            jtfUser.requestFocus();
        }
        else if (password.length() == 0) {
            miClient.showMsgBoxWarning(SGuiConsts.ERR_MSG_FIELD_REQ + "'" + SGuiUtils.getLabelName(jlPassword.getText()) + "'.");
            jpfPassword.requestFocus();
        }
        else if (jlstCompanies.getSelectedIndex() == -1) {
            miClient.showMsgBoxWarning(SGuiConsts.ERR_MSG_FIELD_REQ + "'" + SGuiUtils.getLabelName(((TitledBorder) jspCompanies.getBorder()).getTitle()) + "'.");
            jlstCompanies.requestFocus();
        }
        else {
            try {
                if (moDatabase != null && moDatabase.isConnected()) {
                    moDatabase.disconnect();
                }

                manUserKey = null;
                moDatabase = new SDbDatabase(SDbConsts.DBMS_MYSQL);
                moDatabase.connect(
                        miClient.getSysDatabase().getDbHost(),
                        miClient.getSysDatabase().getDbPort(),
                        (String) ((SGuiItem) jlstCompanies.getSelectedValue()).getComplement(),
                        miClient.getSysDatabase().getUserName(), miClient.getSysDatabase().getUserPassword());
                statement = moDatabase.getConnection().createStatement();

                manUserKey = SUtilUtils.processLogin(miClient, statement, jtfUser.getText(), password, mbApplyUserDisabled);
            }
            catch (SQLException e) {
                SLibUtils.showException(this, e);
            }
            catch (Exception e) {
                SLibUtils.showException(this, e);
            }
        }

        if (manUserKey == null) {
            resetForm();
            jtfUser.requestFocus();
        }
        else {
            mnFormResult = SGuiConsts.FORM_RESULT_OK;
            dispose();
        }
    }

    public void actionCancel() {
        mnFormResult = SGuiConsts.FORM_RESULT_CANCEL;
        dispose();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JButton jbCancel;
    private javax.swing.JButton jbOk;
    private javax.swing.JLabel jlPassword;
    private javax.swing.JLabel jlUser;
    private javax.swing.JList<SGuiItem> jlstCompanies;
    private javax.swing.JPanel jpCommands;
    private javax.swing.JPanel jpDialogCenter;
    private javax.swing.JPanel jpDialogNorth;
    private javax.swing.JPasswordField jpfPassword;
    private javax.swing.JScrollPane jspCompanies;
    private javax.swing.JTextField jtfUser;
    // End of variables declaration//GEN-END:variables

    public void resetForm() {
        jtfUser.setText("");
        jpfPassword.setText("");
    }

    public int getFormResult() {
        return mnFormResult;
    }

    public SDbDatabase getDatabase() {
        return moDatabase;
    }

    public int[] getUserKey() {
        return manUserKey;
    }

    public String getCompany() {
        return ((SGuiItem) jlstCompanies.getSelectedValue()).getItem();
    }
}
