/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DUtilLoginDlg.java
 *
 * Created on 25/08/2011, 12:05:19 PM
 */

package sa.gui.util;

import java.awt.event.KeyEvent;
import java.sql.SQLException;
import sa.lib.SLibConsts;
import sa.lib.SLibUtils;
import sa.lib.gui.SGuiClient;
import sa.lib.gui.SGuiConsts;
import sa.lib.gui.SGuiUtils;

/**
 *
 * @author Sergio Flores
 */
public class SUtilPasswordDlg extends javax.swing.JDialog {

    private SGuiClient miClient;
    private int mnFormResult;
    private boolean mbFirstActivation;

    /** Creates new form DUtilLoginDlg */
    public SUtilPasswordDlg(SGuiClient client) {
        super(client.getFrame(), true);
        miClient = client;
        initComponents();
        initComponentsCustom();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpDialog = new javax.swing.JPanel();
        jpDialogNorth = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jlUser = new javax.swing.JLabel();
        jtfUser = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jlPasswordOld = new javax.swing.JLabel();
        jpfPasswordOld = new javax.swing.JPasswordField();
        jPanel6 = new javax.swing.JPanel();
        jlPasswordNew = new javax.swing.JLabel();
        jpfPasswordNew = new javax.swing.JPasswordField();
        jPanel7 = new javax.swing.JPanel();
        jlPasswordConfirm = new javax.swing.JLabel();
        jpfPasswordConfirm = new javax.swing.JPasswordField();
        jpCommands = new javax.swing.JPanel();
        jbOk = new javax.swing.JButton();
        jbCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Acceso");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jpDialog.setBorder(javax.swing.BorderFactory.createTitledBorder("Cuenta de acceso:"));
        jpDialog.setLayout(new java.awt.BorderLayout());

        jpDialogNorth.setLayout(new java.awt.GridLayout(4, 1, 0, 5));

        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlUser.setText("Usuario:");
        jlUser.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel4.add(jlUser);

        jtfUser.setEditable(false);
        jtfUser.setFocusable(false);
        jtfUser.setPreferredSize(new java.awt.Dimension(100, 23));
        jtfUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfUserActionPerformed(evt);
            }
        });
        jPanel4.add(jtfUser);

        jpDialogNorth.add(jPanel4);

        jPanel5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlPasswordOld.setText("Contraseña anterior:");
        jlPasswordOld.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel5.add(jlPasswordOld);

        jpfPasswordOld.setPreferredSize(new java.awt.Dimension(100, 23));
        jpfPasswordOld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jpfPasswordOldActionPerformed(evt);
            }
        });
        jPanel5.add(jpfPasswordOld);

        jpDialogNorth.add(jPanel5);

        jPanel6.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlPasswordNew.setText("Contraseña nueva:");
        jlPasswordNew.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel6.add(jlPasswordNew);

        jpfPasswordNew.setPreferredSize(new java.awt.Dimension(100, 23));
        jpfPasswordNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jpfPasswordNewActionPerformed(evt);
            }
        });
        jPanel6.add(jpfPasswordNew);

        jpDialogNorth.add(jPanel6);

        jPanel7.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlPasswordConfirm.setText("Confirmar contraseña:");
        jlPasswordConfirm.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel7.add(jlPasswordConfirm);

        jpfPasswordConfirm.setPreferredSize(new java.awt.Dimension(100, 23));
        jpfPasswordConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jpfPasswordConfirmActionPerformed(evt);
            }
        });
        jPanel7.add(jpfPasswordConfirm);

        jpDialogNorth.add(jPanel7);

        jpDialog.add(jpDialogNorth, java.awt.BorderLayout.NORTH);

        getContentPane().add(jpDialog, java.awt.BorderLayout.CENTER);

        jpCommands.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jbOk.setText("Aceptar");
        jbOk.setMargin(new java.awt.Insets(2, 0, 2, 0));
        jbOk.setPreferredSize(new java.awt.Dimension(75, 23));
        jbOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbOkActionPerformed(evt);
            }
        });
        jpCommands.add(jbOk);

        jbCancel.setText("Cancelar");
        jbCancel.setMargin(new java.awt.Insets(2, 0, 2, 0));
        jbCancel.setPreferredSize(new java.awt.Dimension(75, 23));
        jbCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelActionPerformed(evt);
            }
        });
        jpCommands.add(jbCancel);

        getContentPane().add(jpCommands, java.awt.BorderLayout.SOUTH);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-400)/2, (screenSize.height-250)/2, 400, 250);
    }// </editor-fold>//GEN-END:initComponents

    private void jbOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbOkActionPerformed
        actionOk();
    }//GEN-LAST:event_jbOkActionPerformed

    private void jbCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelActionPerformed
        actionCancel();
    }//GEN-LAST:event_jbCancelActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        windowActivated();
    }//GEN-LAST:event_formWindowActivated

    private void jtfUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfUserActionPerformed
        jpfPasswordOld.requestFocus();
    }//GEN-LAST:event_jtfUserActionPerformed

    private void jpfPasswordOldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jpfPasswordOldActionPerformed
        jpfPasswordNew.requestFocus();
    }//GEN-LAST:event_jpfPasswordOldActionPerformed

    private void jpfPasswordNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jpfPasswordNewActionPerformed
        jpfPasswordConfirm.requestFocus();
    }//GEN-LAST:event_jpfPasswordNewActionPerformed

    private void jpfPasswordConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jpfPasswordConfirmActionPerformed
        jbOk.requestFocus();
    }//GEN-LAST:event_jpfPasswordConfirmActionPerformed

    private void initComponentsCustom() {
        mnFormResult = SLibConsts.UNDEFINED;
        mbFirstActivation = true;

        resetForm();

        SGuiUtils.createActionMap(rootPane, this, "actionCancel", "cancel", KeyEvent.VK_ESCAPE);
    }

    private void windowActivated() {
        if (mbFirstActivation) {
            mbFirstActivation = false;
            jtfUser.setText(miClient.getSession().getUser().getName());
            jpfPasswordOld.requestFocus();
        }
    }

    private void resetForm() {
        jtfUser.setText("");
        resetPasswords();
    }

    private void resetPasswords() {
        jpfPasswordOld.setText("");
        jpfPasswordNew.setText("");
        jpfPasswordConfirm.setText("");
    }

    public void actionOk() {
        boolean passwordSet = false;
        String passwordOld = new String(jpfPasswordOld.getPassword());
        String passwordNew = new String(jpfPasswordNew.getPassword());
        String passwordConfirm = new String(jpfPasswordConfirm.getPassword());

        if (passwordOld.length() == 0) {
            miClient.showMsgBoxWarning(SGuiConsts.ERR_MSG_FIELD_REQ + "'" + SGuiUtils.getLabelName(jlPasswordOld.getText()) + "'.");
            jpfPasswordOld.requestFocus();
        }
        else if (passwordNew.length() == 0) {
            miClient.showMsgBoxWarning(SGuiConsts.ERR_MSG_FIELD_REQ + "'" + SGuiUtils.getLabelName(jlPasswordNew.getText()) + "'.");
            jpfPasswordNew.requestFocus();
        }
        else if (passwordConfirm.length() == 0) {
            miClient.showMsgBoxWarning(SGuiConsts.ERR_MSG_FIELD_REQ + "'" + SGuiUtils.getLabelName(jlPasswordConfirm.getText()) + "'.");
            jpfPasswordConfirm.requestFocus();
        }
        else if (passwordNew.compareTo(passwordConfirm) != 0) {
            miClient.showMsgBoxWarning(SGuiConsts.ERR_MSG_FIELD_REQ_EQUAL + "'" + SGuiUtils.getLabelName(jlPasswordNew.getText()) + "', '" + SGuiUtils.getLabelName(jlPasswordConfirm.getText()) + "'.");
            jpfPasswordOld.requestFocus();
            resetPasswords();
        }
        else {
            try {
                passwordSet = SUtilUtils.processNewPassword(miClient, passwordOld, passwordNew);
            }
            catch (SQLException e) {
                SLibUtils.showException(this, e);
            }
            catch (Exception e) {
                SLibUtils.showException(this, e);
            }
            finally {
                if (!passwordSet) {
                    resetPasswords();
                    jpfPasswordOld.requestFocus();
                }
            }
        }

        if (passwordSet) {
            mnFormResult = SGuiConsts.FORM_RESULT_OK;
            dispose();
        }
    }

    public void actionCancel() {
        mnFormResult = SGuiConsts.FORM_RESULT_CANCEL;
        dispose();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JButton jbCancel;
    private javax.swing.JButton jbOk;
    private javax.swing.JLabel jlPasswordConfirm;
    private javax.swing.JLabel jlPasswordNew;
    private javax.swing.JLabel jlPasswordOld;
    private javax.swing.JLabel jlUser;
    private javax.swing.JPanel jpCommands;
    private javax.swing.JPanel jpDialog;
    private javax.swing.JPanel jpDialogNorth;
    private javax.swing.JPasswordField jpfPasswordConfirm;
    private javax.swing.JPasswordField jpfPasswordNew;
    private javax.swing.JPasswordField jpfPasswordOld;
    private javax.swing.JTextField jtfUser;
    // End of variables declaration//GEN-END:variables

    public int getFormResult() {
        return mnFormResult;
    }
}
