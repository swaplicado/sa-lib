/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SUtilConfigApp.java
 *
 * Created on 3/06/2011, 01:09:29 PM
 */

package sa.gui.util;

import java.awt.event.KeyEvent;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import sa.lib.SLibUtils;
import sa.lib.gui.SGuiUtils;
import sa.lib.xml.SXmlUtils;

/**
 *
 * @author Sergio Flores
 */
public class SUtilConfigApp extends JFrame {

    /** Creates new form SUtilConfigApp */
    public SUtilConfigApp() {
        initComponents();
        initComponentsCustom();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpFrame = new javax.swing.JPanel();
        jpFrameNorth = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jlDbHost = new javax.swing.JLabel();
        jtfDbHost = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jlDbPort = new javax.swing.JLabel();
        jtfDbPort = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jlDbName = new javax.swing.JLabel();
        jtfDbName = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jlUserName = new javax.swing.JLabel();
        jtfUserName = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jlUserPassword = new javax.swing.JLabel();
        jpfUserPassword = new javax.swing.JPasswordField();
        jPanel10 = new javax.swing.JPanel();
        jlTerminal = new javax.swing.JLabel();
        jtfTerminal = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        jlTimeZone = new javax.swing.JLabel();
        jcbTimeZone = new javax.swing.JComboBox();
        jpCommands = new javax.swing.JPanel();
        jbOk = new javax.swing.JButton();
        jbCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Client parameters");

        jpFrame.setBorder(javax.swing.BorderFactory.createTitledBorder("Parameters:"));
        jpFrame.setLayout(new java.awt.BorderLayout());

        jpFrameNorth.setLayout(new java.awt.GridLayout(7, 1, 0, 5));

        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlDbHost.setText("Database host:");
        jlDbHost.setPreferredSize(new java.awt.Dimension(150, 23));
        jPanel4.add(jlDbHost);

        jtfDbHost.setText("TEXT");
        jtfDbHost.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel4.add(jtfDbHost);

        jpFrameNorth.add(jPanel4);

        jPanel5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlDbPort.setText("Database port:");
        jlDbPort.setPreferredSize(new java.awt.Dimension(150, 23));
        jPanel5.add(jlDbPort);

        jtfDbPort.setText("TEXT");
        jtfDbPort.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel5.add(jtfDbPort);

        jpFrameNorth.add(jPanel5);

        jPanel6.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlDbName.setText("Database name:");
        jlDbName.setPreferredSize(new java.awt.Dimension(150, 23));
        jPanel6.add(jlDbName);

        jtfDbName.setText("TEXT");
        jtfDbName.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel6.add(jtfDbName);

        jpFrameNorth.add(jPanel6);

        jPanel8.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlUserName.setText("User name:");
        jlUserName.setPreferredSize(new java.awt.Dimension(150, 23));
        jPanel8.add(jlUserName);

        jtfUserName.setText("TEXT");
        jtfUserName.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel8.add(jtfUserName);

        jpFrameNorth.add(jPanel8);

        jPanel9.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlUserPassword.setText("User password:");
        jlUserPassword.setPreferredSize(new java.awt.Dimension(150, 23));
        jPanel9.add(jlUserPassword);

        jpfUserPassword.setText("PASS");
        jpfUserPassword.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel9.add(jpfUserPassword);

        jpFrameNorth.add(jPanel9);

        jPanel10.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlTerminal.setText("Number of terminal:");
        jlTerminal.setPreferredSize(new java.awt.Dimension(150, 23));
        jPanel10.add(jlTerminal);

        jtfTerminal.setText("TEXT");
        jtfTerminal.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel10.add(jtfTerminal);

        jpFrameNorth.add(jPanel10);

        jPanel11.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlTimeZone.setText("Terminal time zone:");
        jlTimeZone.setPreferredSize(new java.awt.Dimension(150, 23));
        jPanel11.add(jlTimeZone);

        jcbTimeZone.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbTimeZone.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel11.add(jcbTimeZone);

        jpFrameNorth.add(jPanel11);

        jpFrame.add(jpFrameNorth, java.awt.BorderLayout.PAGE_START);

        getContentPane().add(jpFrame, java.awt.BorderLayout.CENTER);

        jpCommands.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jbOk.setText("Ok");
        jbOk.setPreferredSize(new java.awt.Dimension(75, 23));
        jbOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbOkActionPerformed(evt);
            }
        });
        jpCommands.add(jbOk);

        jbCancel.setText("Cancel");
        jbCancel.setPreferredSize(new java.awt.Dimension(75, 23));
        jbCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelActionPerformed(evt);
            }
        });
        jpCommands.add(jbCancel);

        getContentPane().add(jpCommands, java.awt.BorderLayout.PAGE_END);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-400)/2, (screenSize.height-300)/2, 400, 300);
    }// </editor-fold>//GEN-END:initComponents

    private void jbOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbOkActionPerformed
        actionOk();
    }//GEN-LAST:event_jbOkActionPerformed

    private void jbCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelActionPerformed
        actionCancel();
    }//GEN-LAST:event_jbCancelActionPerformed

    @SuppressWarnings("unchecked")
    private void initComponentsCustom() {
        jtfDbHost.setText("");
        jtfDbPort.setText("");
        jtfDbName.setText("");
        jtfUserName.setText("");
        jpfUserPassword.setText("");
        jtfTerminal.setText("");

        jcbTimeZone.removeAllItems();

        for (int i = -12; i <= 12; i++) {
            jcbTimeZone.addItem("GMT" + (i < 0 ? "-" : "+") + (Math.abs(i) >= 10 ? "" : "0") + Math.abs(i) + ":00");
        }

        jcbTimeZone.setSelectedIndex(0);

        readConfigXml();

        SGuiUtils.createActionMap(rootPane, this, "actionCancel", "cancel", KeyEvent.VK_ESCAPE);
    }

    private void readConfigXml() {
        String xml = "";
        String timeZone = "";
        SUtilConfigXml cfgXml = null;

        try {
            xml = SXmlUtils.readXml(SUtilConsts.FILE_NAME_CFG);
            cfgXml = new SUtilConfigXml();
            cfgXml.processXml(xml);

            jtfDbHost.setText(cfgXml.getAttribute(SUtilConfigXml.ATT_DB_HOST).getValue().toString());
            jtfDbPort.setText(cfgXml.getAttribute(SUtilConfigXml.ATT_DB_PORT).getValue().toString());
            jtfDbName.setText(cfgXml.getAttribute(SUtilConfigXml.ATT_DB_NAME).getValue().toString());
            jtfUserName.setText(cfgXml.getAttribute(SUtilConfigXml.ATT_USR_NAME).getValue().toString());
            jpfUserPassword.setText(cfgXml.getAttribute(SUtilConfigXml.ATT_USR_PSWD).getValue().toString());
            jtfTerminal.setText("" + cfgXml.getAttribute(SUtilConfigXml.ATT_TERMINAL).getValue());

            jcbTimeZone.setSelectedIndex(0);
            timeZone = cfgXml.getAttribute(SUtilConfigXml.ATT_TIME_ZONE).getValue().toString();

            for (int i = 0; i < jcbTimeZone.getItemCount(); i++) {
                if (timeZone.compareTo(jcbTimeZone.getItemAt(i).toString()) == 0) {
                    jcbTimeZone.setSelectedIndex(i);
                    break;
                }
            }
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(this, e, "Exception", JOptionPane.ERROR_MESSAGE);
        }
    }

    private boolean saveConfigXml() {
        boolean saved = false;
        SUtilConfigXml cfgXml = null;

        try {
            cfgXml = new SUtilConfigXml();
            cfgXml.getAttribute(SUtilConfigXml.ATT_DB_HOST).setValue(SLibUtils.textTrim(jtfDbHost.getText()));
            cfgXml.getAttribute(SUtilConfigXml.ATT_DB_PORT).setValue(SLibUtils.textTrim(jtfDbPort.getText()));
            cfgXml.getAttribute(SUtilConfigXml.ATT_DB_NAME).setValue(SLibUtils.textTrim(jtfDbName.getText()));
            cfgXml.getAttribute(SUtilConfigXml.ATT_USR_NAME).setValue(SLibUtils.textTrim(jtfUserName.getText()));
            cfgXml.getAttribute(SUtilConfigXml.ATT_USR_PSWD).setValue(SLibUtils.textTrim(new String(jpfUserPassword.getPassword())));
            cfgXml.getAttribute(SUtilConfigXml.ATT_TERMINAL).setValue(SLibUtils.parseInt(jtfTerminal.getText()));
            cfgXml.getAttribute(SUtilConfigXml.ATT_TIME_ZONE).setValue(SLibUtils.textTrim(jcbTimeZone.getSelectedItem().toString()));

            SXmlUtils.writeXml(cfgXml.getXmlString(), SUtilConsts.FILE_NAME_CFG);
            JOptionPane.showMessageDialog(this, "Parameters were saved succesfully.", "Information", JOptionPane.INFORMATION_MESSAGE);
            saved = true;
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(this, e, "Exception", JOptionPane.ERROR_MESSAGE);
        }

        return saved;
    }

    public void actionOk() {
        if (saveConfigXml()) {
            setVisible(false);
            System.exit(0);
        }
    }

    public void actionCancel() {
        setVisible(false);
        System.exit(0);
    }

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        }
        catch (java.lang.Exception e) {
            SLibUtils.showException(SUtilConfigApp.class.getName(), e);
        }

        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new SUtilConfigApp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JButton jbCancel;
    private javax.swing.JButton jbOk;
    private javax.swing.JComboBox jcbTimeZone;
    private javax.swing.JLabel jlDbHost;
    private javax.swing.JLabel jlDbName;
    private javax.swing.JLabel jlDbPort;
    private javax.swing.JLabel jlTerminal;
    private javax.swing.JLabel jlTimeZone;
    private javax.swing.JLabel jlUserName;
    private javax.swing.JLabel jlUserPassword;
    private javax.swing.JPanel jpCommands;
    private javax.swing.JPanel jpFrame;
    private javax.swing.JPanel jpFrameNorth;
    private javax.swing.JPasswordField jpfUserPassword;
    private javax.swing.JTextField jtfDbHost;
    private javax.swing.JTextField jtfDbName;
    private javax.swing.JTextField jtfDbPort;
    private javax.swing.JTextField jtfTerminal;
    private javax.swing.JTextField jtfUserName;
    // End of variables declaration//GEN-END:variables

}
