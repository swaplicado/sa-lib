/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * STableTabComponent.java
 *
 * Created on 6/10/2009, 04:13:40 PM
 */

package sa.lib.grid;

import java.awt.Color;
import javax.swing.ImageIcon;
import javax.swing.JPanel;
import javax.swing.JTabbedPane;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import sa.lib.gui.SGuiClient;
import sa.lib.img.SImgConsts;

/**
 *
 * @author Sergio Flores
 */
public class SGridTabComponent extends JPanel implements ChangeListener {

    private SGuiClient miClient;
    private JTabbedPane moTabbedPane;
    private ImageIcon moIconActive;
    private ImageIcon moIconInactive;

    /** Creates new form STableTabComponent */
    public SGridTabComponent(SGuiClient client) {
        this(client, null);
    }

    /** Creates new form STableTabComponent */
    public SGridTabComponent(SGuiClient client, ImageIcon icon) {
        miClient = client;
        moTabbedPane = miClient.getTabbedPane();
        moIconActive = miClient.getImageIcon(SImgConsts.ICO_GUI_CLOSE);
        moIconInactive = miClient.getImageIcon(SImgConsts.ICO_GUI_CLOSE_INA);
        moTabbedPane.addChangeListener(this);

        initComponents();

        if (icon != null) {
            jlTitle.setIcon(icon);  // member jlTitle has been already instanciated
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlTitle = new javax.swing.JLabel() {
            public String getText() {
                int i = moTabbedPane.indexOfTabComponent(SGridTabComponent.this);
                if (i != -1) {
                    return moTabbedPane.getTitleAt(i);
                }
                return null;
            }
        };
        jbClose = new javax.swing.JButton();

        setFocusable(false);
        setOpaque(false);
        setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 0));

        jlTitle.setText("Title");
        jlTitle.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 5));
        jlTitle.setFocusable(false);
        add(jlTitle);

        jbClose.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jbClose.setForeground(new java.awt.Color(64, 64, 64));
        jbClose.setText("x");
        jbClose.setToolTipText("Cerrar [Ctrl+Z]");
        jbClose.setFocusable(false);
        jbClose.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbClose.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jbClose.setMaximumSize(new java.awt.Dimension(16, 16));
        jbClose.setMinimumSize(new java.awt.Dimension(16, 16));
        jbClose.setOpaque(false);
        jbClose.setPreferredSize(new java.awt.Dimension(16, 16));
        jbClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jbCloseMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jbCloseMouseExited(evt);
            }
        });
        jbClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCloseActionPerformed(evt);
            }
        });
        add(jbClose);
    }// </editor-fold>//GEN-END:initComponents

    private void jbCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCloseActionPerformed
        actionClose();
    }//GEN-LAST:event_jbCloseActionPerformed

    private void jbCloseMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbCloseMouseEntered
        jbClose.setForeground(Color.RED);
    }//GEN-LAST:event_jbCloseMouseEntered

    private void jbCloseMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbCloseMouseExited
        jbClose.setForeground(Color.BLACK);
    }//GEN-LAST:event_jbCloseMouseExited

    private void actionClose() {
        int i = moTabbedPane.indexOfTabComponent(this);
        if (i != -1) {
            ((SGridPaneView) moTabbedPane.getComponentAt(i)).paneViewClosed();
            moTabbedPane.removeTabAt(i);
        }
    }

    private void stateChangedTabbedPane() {
        int i = moTabbedPane.indexOfTabComponent(this);
        if (i != -1) {
            jbClose.setIcon(i == moTabbedPane.getSelectedIndex() ? moIconActive : moIconInactive);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbClose;
    private javax.swing.JLabel jlTitle;
    // End of variables declaration//GEN-END:variables

    @Override
    public void stateChanged(ChangeEvent e) {
        if (e.getSource() instanceof javax.swing.JTabbedPane) {
            if (e.getSource() == moTabbedPane) {
                stateChangedTabbedPane();
            }
        }
    }
}
